steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args: [ "build", "-t", "europe-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}", "--target", "production", "." ]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: [ "push", "europe-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}" ]

  - id: "deploy prod service"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--platform"
      - "managed"
      - "--region"
      - "${_REGION}"
      - "--allow-unauthenticated"
      - "--image"
      - "europe-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}"

  # Cleanup tags against closed pull requests
  - id: "clean up old tags"
    name: "europe-docker.pkg.dev/${PROJECT_ID}/utilities/deployment-preview"
    args:
      - "cleanup"
      - "--project-id"
      - "${PROJECT_ID}"
      - "--region"
      - "${_REGION}"
      - "--service"
      - "${_SERVICE_NAME}"
      - "--repo-name"
      - "${_GITHUB_OWNER}/${REPO_NAME}"
    secretEnv:
      - "GITHUB_TOKEN"

substitutions:
  _REGION: "europe-central2"
  _SERVICE_NAME: "site-cms"
  _GITHUB_OWNER: "$(push.repository.owner.name)"

availableSecrets:
  secretManager:
    - versionName: "projects/$PROJECT_ID/secrets/github_token/versions/latest"
      env: "GITHUB_TOKEN"
