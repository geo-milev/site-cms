import {CollectionConfig} from 'payload/types';
import imageOnly from "../lib/filters/onlyImage";
import {updateRssFeed} from "../lib/rssFeed";
import {updateSitemap} from "../lib/sitemap";
import {isAdmin} from "../lib/access/isAdmin";
import {administration} from "../lib/groups";

const PagesSeoData: CollectionConfig = {
    slug: 'pages-seo-data',
    labels: {
        singular: {
            en: 'Page SEO Data', bg: 'SEO на страница'
        },
        plural: {
            en: 'Pages SEO Data', bg: 'SEO на страници'
        }
    },
    admin: {
        useAsTitle: 'relativeUrl',
        defaultColumns: ['relativeUrl', 'title', 'lastUpdate'],
        listSearchableFields: ['title', 'description'],
        group: administration,
        hidden: (user) => !isAdmin({ req: user })
    },
    access: {
        read: ({ req }) => {
            if (req.user) return true

            return {
                or: [
                    {
                        hideFromSitemap: {
                            equals: false,
                        },
                    },
                    {
                        hideFromSitemap: {
                            exists: false,
                        },
                    },
                ],
            }
        },
        create: isAdmin,
        delete: isAdmin,
        update: isAdmin,
    },
    hooks: {
        afterChange: [
            async (data) => {
                await updateRssFeed(data.req.payload)
                await updateSitemap(data.req.payload)
            }
        ],
        afterDelete: [
            async (data) => {
                await updateRssFeed(data.req.payload)
                await updateSitemap(data.req.payload)
            }
        ],
    },
    fields: [
        {
            name: 'relativeUrl',
            type: 'text',
            required: true,
            unique: true,
            label: { en: 'Relative url', bg: 'Относителен адрес'}
        },
        {
            name: 'title',
            type: 'text',
            required: true,
            label: { en: 'Title', bg: 'Заглавие'}
        },
        {
            name: 'description',
            type: 'text',
            label: { en: 'Description', bg: 'Описание' }
        },
        {
            name: 'image',
            type: 'upload',
            relationTo: 'media',
            filterOptions: imageOnly,
            label: { en: 'Image', bg: 'Снимка' },
        },
        {
            name: 'lastUpdate',
            type: 'date',
            required: true,
            label: { en: 'Last update', bg: 'Последна промяна' },
        },
        {
          name: 'hideFromSitemap',
          type: 'checkbox',
          defaultValue: false,
          label: { en: 'Hide from search engines', bg: 'Скрий от търсачки' }
        },
        {
            name: 'autoGenerated',
            type: 'checkbox',
            defaultValue: false,
            admin: {
                condition: () => {
                    return false;
                }
            },
            access: {
                update: isAdmin
            }
        },
    ],
}

export default PagesSeoData;
